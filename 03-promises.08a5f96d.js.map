{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAIpC,SAASG,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,EAAUQ,MAAAP,IAGpBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,GAAQ,GAE5BA,EAAM,G,CAbYN,SAASC,cAAc,yBAkB/Ba,iBAAiB,SAASC,IACzCA,EAAEC,iBACF,IAAIC,EAAaC,OAAOnB,EAAMoB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OAE5B,GAAIF,EAAa,GAAKG,EAAY,GAAKjB,EAAOgB,OAAS,EACrDE,EAAAxB,GAASyB,OAAOC,KAAK,uEACIN,QAAiBG,QAAgBjB,EAAOgB,eAKnE,IAAK,IAAIK,EAAI,EAAGA,EAAIrB,EAAOgB,MAAOK,IAChCpB,EAAc,EAAIoB,EAAGP,EAAaO,EAAIJ,GACnCK,MAAK,EAACpB,SAAEA,EAAUQ,MAAAa,MACjBL,EAAAxB,GAASyB,OAAOK,QACd,uBAAqBtB,QAAiBqB,MAAU,IAGnDE,OAAM,EAACvB,SAAEA,EAAUQ,MAAAgB,MAClBR,EAAAxB,GAASyB,OAAOQ,QACd,sBAAoBzB,QAAiBwB,MAAU,GAEjD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet delay = document.querySelector('input[name=\"delay\"]');\nlet step = document.querySelector('input[name=\"step\"]');\nlet amount = document.querySelector('input[name=\"amount\"]');\n\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]')\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nbtnCreatePromise.addEventListener('click', e => {\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n\n  if (firstDelay < 0 || delayStep < 0 || amount.value <= 0) {\n    Notiflix.Notify.info(`❌ Error! Number must be greater than 0!\n      Incorrect parametrs: ${firstDelay}ms, ${delayStep}ms, ${amount.value} `       \n    );\n    return;\n  } \n  \n  for (let i = 0; i < amount.value; i++) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n\n\n\n\n\n// import Notiflix from 'notiflix';\n\n// const delay = document.querySelector('input[name=\"delay\"]');\n// const step = document.querySelector('input[name=\"step\"]');\n// const amount = document.querySelector('input[name=\"amount\"]');\n// const btnCreatePromise = document.querySelector('button[type=\"submit\"]')\n\n// function createPromise(position, delay) {\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       if (shouldResolve) {\n//         // Fulfill\n//         resolve({ position, delay });\n//       } else {\n//         // Reject\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n//   return promise;\n// }\n\n// btnCreatePromise.addEventListener('click', e => {\n//   e.preventDefault();\n//   let firstDelay = Number(delay.value);\n//   let delayStep = Number(step.value);\n//   for (let i = 0; i < amount.value; i++) {\n//     createPromise(1 + i, firstDelay + i * delayStep)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`\n//         );\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(\n//           `❌ Rejected promise ${position} in ${delay}ms`\n//         );\n//       });\n//   }\n// });\n\n    \n      \n    \n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","$parcel$interopDefault","Notify","info","i","then","delay2","success","catch","delay3","failure"],"version":3,"file":"03-promises.08a5f96d.js.map"}